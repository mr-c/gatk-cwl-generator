{"summary": "Combine per-sample gVCF files produced by HaplotypeCaller into a multi-sample gVCF file", "parallel": [], "activeregion": {}, "partitiontype": "LOCUS", "walkertype": "LocusWalker", "arguments": [{"summary": "One or more specific annotations to recompute.  The single value 'none' removes the default annotations", "name": "--annotation", "synonyms": "-A", "type": "List[String]", "required": "no", "fulltext": "Which annotations to recompute for the combined output VCF file.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "advanced_param", "options": []}, {"summary": "If > 0, reference bands will be broken up at genomic positions that are multiples of this number", "name": "--breakBandsAtMultiplesOf", "synonyms": "-breakBandsAtMultiplesOf", "type": "int", "required": "no", "fulltext": "To reduce file sizes our gVCFs group similar reference positions into bands.  However, there are cases when users will want to know that no bands\n span across a given genomic position (e.g. when scatter-gathering jobs across a compute farm).  The option below enables users to break bands at\n pre-defined positions.  For example, a value of 10,000 would mean that we would ensure that no bands span across chr1:10000, chr1:20000, etc.\n\n Note that the --convertToBasePairResolution argument is just a special case of this argument with a value of 1.", "defaultValue": "0", "minValue": "-Infinity", "maxValue": "Infinity", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_param", "options": []}, {"summary": "If specified, convert banded gVCFs to all-sites gVCFs", "name": "--convertToBasePairResolution", "synonyms": "-bpResolution", "type": "boolean", "required": "no", "fulltext": "", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_flag", "options": []}, {"summary": "dbSNP file", "name": "--dbsnp", "synonyms": "-D", "type": "RodBinding[VariantContext]", "required": "no", "fulltext": "The rsIDs from this file are used to populate the ID column of the output.  Also, the DB INFO flag will be set when appropriate. Note that dbSNP is not used in any way for the calculations themselves.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "<a href=htsjdk_variant_bcf2_BCF2Codec.php>BCF2</a>, <a href=htsjdk_variant_vcf_VCFCodec.php>VCF</a>, <a href=htsjdk_variant_vcf_VCF3Codec.php>VCF3</a>", "kind": "optional_in", "options": []}, {"summary": "One or more classes/groups of annotations to apply to variant calls", "name": "--group", "synonyms": "-G", "type": "String[]", "required": "no", "fulltext": "Which groups of annotations to add to the output VCF file. The single value 'none' removes the default group. See\n the VariantAnnotator -list argument to view available groups. Note that this usage is not recommended because\n it obscures the specific requirements of individual annotations. Any requirements that are not met (e.g. failing\n to provide a pedigree file for a pedigree-based annotation) may cause the run to fail.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_param", "options": []}, {"summary": "File to which the combined gVCF should be written", "name": "--out", "synonyms": "-o", "type": "VariantContextWriter", "required": "no", "fulltext": "", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_out", "options": []}, {"summary": "One or more input gVCF files", "name": "--variant", "synonyms": "-V", "type": "List[RodBindingCollection[VariantContext]]", "required": "yes", "fulltext": "The gVCF files to merge together", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "required_in", "options": []}], "refwindow": {"stop": 1, "start": 0}, "description": "\n\n <p>\n CombineGVCFs is meant to be used for hierarchical merging of gVCFs that will eventually be input into GenotypeGVCFs.\n One would use this tool when needing to genotype too large a number of individual gVCFs; instead of passing them\n all in to GenotypeGVCFs, one would first use CombineGVCFs on smaller batches of samples and then pass these combined\n gVCFs to GenotypeGVCFs.</p>\n\n <h3>Input</h3>\n <p>\n Two or more Haplotype Caller gVCFs to combine.\n </p>\n\n <h3>Output</h3>\n <p>\n A combined multisample gVCF.\n </p>\n\n <h3>Usage example</h3>\n <pre>\n java -jar GenomeAnalysisTK.jar \\\n   -T CombineGVCFs \\\n   -R reference.fasta \\\n   --variant sample1.g.vcf \\\n   --variant sample2.g.vcf \\\n   -o cohort.g.vcf\n </pre>\n\n <h3>Caveat</h3>\n <p>Only gVCF files produced by HaplotypeCaller (or CombineGVCFs) can be used as input for this tool. Some other\n programs produce files that they call gVCFs but those lack some important information (accurate genotype likelihoods\n for every position) that GenotypeGVCFs requires for its operation.</p>", "name": "CombineGVCFs", "annotinfo": "", "readfilters": [{"filename": "org_broadinstitute_gatk_engine_filters_MalformedReadFilter.php", "name": "MalformedReadFilter"}, {"filename": "org_broadinstitute_gatk_engine_filters_BadCigarFilter.php", "name": "BadCigarFilter"}, {"filename": "org_broadinstitute_gatk_engine_filters_UnmappedReadFilter.php", "name": "UnmappedReadFilter"}, {"filename": "org_broadinstitute_gatk_engine_filters_NotPrimaryAlignmentFilter.php", "name": "NotPrimaryAlignmentFilter"}, {"filename": "org_broadinstitute_gatk_engine_filters_FailsVendorQualityCheckFilter.php", "name": "FailsVendorQualityCheckFilter"}, {"filename": "org_broadinstitute_gatk_engine_filters_DuplicateReadFilter.php", "name": "DuplicateReadFilter"}], "downsampling": {}, "group": "Variant Evaluation and Manipulation Tools", "annotfield": ""}