{"summary": "Left-align indels within reads in a bam file", "parallel": [], "activeregion": {}, "partitiontype": "READ", "walkertype": "ReadWalker", "arguments": [{"summary": "Output bam", "name": "--out", "synonyms": "-o", "type": "GATKSAMFileWriter", "required": "no", "fulltext": "", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_out", "options": []}], "refwindow": {}, "description": "\n\n <p>This tool left-aligns any indels within read cigars in order to standardize representation when there are multiple valid\n representations possible (i.e. where the same indel can be placed at multiple positions and still represent the same haplotype).\n The standard convention is to place an indel at the left-most position possible, but this is not always followed, so\n this tool can be used to correct the representation of indels.</p>\n\n <h3>Note</h3>\n <p>This is only really needed when calling variants with legacy locus-based tools such as UnifiedGenotyper. With more\n sophisticated tools (like HaplotypeCaller) that involve reconstructing haplotypes (eg through reassembly), the problem\n of multiple valid representations is handled internally and does not need to be corrected explicitly.</p>\n\n <h3>Input</h3>\n <p>\n A bam file with mapped reads.\n </p>\n\n <h3>Output</h3>\n <p>\n A bam file in which indels have been left-aligned where appropriate.\n </p>\n\n <h3>Usage example</h3>\n <pre>\n java -jar GenomeAnalysisTK.jar \\\n   -R reference.fasta \\\n   -T LeftAlignIndels \\\n   -I reads.bam \\\n   -o output_with_leftaligned_indels.bam\n </pre>", "name": "LeftAlignIndels", "annotinfo": "", "readfilters": [{"filename": "org_broadinstitute_gatk_engine_filters_MalformedReadFilter.php", "name": "MalformedReadFilter"}, {"filename": "org_broadinstitute_gatk_engine_filters_BadCigarFilter.php", "name": "BadCigarFilter"}], "downsampling": {"by": "NONE", "to_cov": -1}, "group": "Sequence Data Processing Tools", "annotfield": ""}