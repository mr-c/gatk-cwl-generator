{"summary": "Select a subset of variants from a larger callset", "parallel": [{"arg": "-nt", "name": "TreeReducible", "link": "http://www.broadinstitute.org/gatk/guide/tooldocs/org_broadinstitute_gatk_engine_CommandLineGATK.php#-nt"}], "activeregion": {}, "partitiontype": "LOCUS", "walkertype": "LocusWalker", "arguments": [{"summary": "Output variants also called in this comparison track", "name": "--concordance", "synonyms": "-conc", "type": "RodBinding[VariantContext]", "required": "no", "fulltext": "A site is considered concordant if (1) we are not looking for specific samples and there is a variant called\n in both the variant and concordance tracks or (2) every sample present in the variant track is present in the\n concordance track and they have the sample genotype call.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "<a href=htsjdk_variant_bcf2_BCF2Codec.php>BCF2</a>, <a href=htsjdk_variant_vcf_VCFCodec.php>VCF</a>, <a href=htsjdk_variant_vcf_VCF3Codec.php>VCF3</a>", "kind": "optional_in", "options": []}, {"summary": "Output variants not called in this comparison track", "name": "--discordance", "synonyms": "-disc", "type": "RodBinding[VariantContext]", "required": "no", "fulltext": "A site is considered discordant if there exists some sample in the variant track that has a non-reference genotype\n and either the site isn't present in this track, the sample isn't present in this track,\n or the sample is called reference in this track.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "<a href=htsjdk_variant_bcf2_BCF2Codec.php>BCF2</a>, <a href=htsjdk_variant_vcf_VCFCodec.php>VCF</a>, <a href=htsjdk_variant_vcf_VCF3Codec.php>VCF3</a>", "kind": "optional_in", "options": []}, {"summary": "List of sample expressions to exclude", "name": "--exclude_sample_expressions", "synonyms": "-xl_se", "type": "Set[String]", "required": "no", "fulltext": "Using a regular expression allows you to match multiple sample names that have that pattern in common. Note that sample exclusion takes precedence\n over inclusion, so that if a sample is in both lists it will be excluded. This  argument can be specified multiple times in order to use multiple\n different matching patterns.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_in", "options": []}, {"summary": "List of samples to exclude", "name": "--exclude_sample_file", "synonyms": "-xl_sf", "type": "Set[File]", "required": "no", "fulltext": "Sample names should be in a plain text file listing one sample name per line. Note that sample exclusion takes precedence over inclusion, so that\n if a sample is in both lists it will be excluded. This argument can be specified multiple times in order to\n provide multiple sample list files.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_in", "options": []}, {"summary": "Exclude genotypes from this sample", "name": "--exclude_sample_name", "synonyms": "-xl_sn", "type": "Set[String]", "required": "no", "fulltext": "Note that sample exclusion takes precedence over inclusion, so that if a sample is in both lists it will be\n excluded. This argument can be specified multiple times in order to provide multiple sample names.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_param", "options": []}, {"summary": "Don't include filtered sites", "name": "--excludeFiltered", "synonyms": "-ef", "type": "boolean", "required": "no", "fulltext": "If this flag is enabled, sites that have been marked as filtered (i.e. have anything other than `.` or `PASS`\n in the FILTER field) will be excluded from the output.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_flag", "options": []}, {"summary": "List of variant IDs to select", "name": "--excludeIDs", "synonyms": "-xlIDs", "type": "File", "required": "no", "fulltext": "If a file containing a list of IDs is provided to this argument, the tool will not select variants whose ID\n field is present in this list of IDs. The matching is done by exact string matching. The expected file format\n is simply plain text with one ID per line.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_param", "options": []}, {"summary": "Don't include non-variant sites", "name": "--excludeNonVariants", "synonyms": "-env", "type": "boolean", "required": "no", "fulltext": "", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_flag", "options": []}, {"summary": "Forces output VCF to be compliant to up-to-date version", "name": "--forceValidOutput", "synonyms": "NA", "type": "boolean", "required": "no", "fulltext": "If this argument is provided, the output will be compliant with the version in the header, however it will also\n cause the tool to run slower than without the argument. Without the argument the header will be compliant with\n the up-to-date version, but the output in the body may not be compliant. If an up-to-date input file is used,\n then the output will also be up-to-date regardless of this argument.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_flag", "options": []}, {"summary": "Output non-mendelian violation sites only", "name": "--invertMendelianViolation", "synonyms": "-invMv", "type": "Boolean", "required": "no", "fulltext": "If this flag is enabled, this tool will select only variants that do not correspond to a mendelian violation as\n determined on the basis of family structure. Requires passing a pedigree file using the engine-level\n `-ped` argument.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_flag", "options": []}, {"summary": "Invert the selection criteria for -select", "name": "--invertselect", "synonyms": "-invertSelect", "type": "boolean", "required": "no", "fulltext": "Invert the selection criteria for -select.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_flag", "options": []}, {"summary": "List of variant IDs to select", "name": "--keepIDs", "synonyms": "-IDs", "type": "File", "required": "no", "fulltext": "If a file containing a list of IDs is provided to this argument, the tool will only select variants whose ID\n field is present in this list of IDs. The matching is done by exact string matching. The expected file format\n is simply plain text with one ID per line.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_param", "options": []}, {"summary": "Store the original AC, AF, and AN values after subsetting", "name": "--keepOriginalAC", "synonyms": "-keepOriginalAC", "type": "boolean", "required": "no", "fulltext": "When subsetting a callset, this tool recalculates the AC, AF, and AN values corresponding to the contents of the\n subset. If this flag is enabled, the original values of those annotations will be stored in new annotations called\n AC_Orig, AF_Orig, and AN_Orig.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_flag", "options": []}, {"summary": "Store the original DP value after subsetting", "name": "--keepOriginalDP", "synonyms": "-keepOriginalDP", "type": "boolean", "required": "no", "fulltext": "When subsetting a callset, this tool recalculates the site-level (INFO field) DP value corresponding to the contents of the\n subset. If this flag is enabled, the original value of the DP annotation will be stored in a new annotation called\n DP_Orig.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_flag", "options": []}, {"summary": "Maximum number of samples filtered at the genotype level", "name": "--maxFilteredGenotypes", "synonyms": "NA", "type": "int", "required": "no", "fulltext": "If this argument is provided, select sites where at most a maximum number of samples are filtered at the genotype level.", "defaultValue": "2147483647", "minValue": "-Infinity", "maxValue": "Infinity", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_param", "options": []}, {"summary": "Maximum fraction of samples filtered at the genotype level", "name": "--maxFractionFilteredGenotypes", "synonyms": "NA", "type": "double", "required": "no", "fulltext": "If this argument is provided, select sites where a fraction or less of the samples are filtered at the genotype level.", "defaultValue": "1.0", "minValue": "-Infinity", "maxValue": "Infinity", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_param", "options": []}, {"summary": "Maximum size of indels to include", "name": "--maxIndelSize", "synonyms": "NA", "type": "int", "required": "no", "fulltext": "If this argument is provided, indels that are larger than the specified size will be excluded.", "defaultValue": "2147483647", "minValue": "-Infinity", "maxValue": "Infinity", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_param", "options": []}, {"summary": "Output mendelian violation sites only", "name": "--mendelianViolation", "synonyms": "-mv", "type": "Boolean", "required": "no", "fulltext": "If this flag is enabled, this tool will select only variants that correspond to a mendelian violation as\n determined on the basis of family structure. Requires passing a pedigree file using the engine-level\n `-ped` argument.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_flag", "options": []}, {"summary": "Minimum GQ score for each trio member to accept a site as a violation", "name": "--mendelianViolationQualThreshold", "synonyms": "-mvq", "type": "double", "required": "no", "fulltext": "This argument specifies the genotype quality (GQ) threshold that all members of a trio must have in order\n for a site to be accepted as a mendelian violation. Note that the `-mv` flag must be set for this argument to have an effect.", "defaultValue": "0.0", "minValue": "-Infinity", "maxValue": "Infinity", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_param", "options": []}, {"summary": "Minimum number of samples filtered at the genotype level", "name": "--minFilteredGenotypes", "synonyms": "NA", "type": "int", "required": "no", "fulltext": "If this argument is provided, select sites where at least a minimum number of samples are filtered at the genotype level.", "defaultValue": "0", "minValue": "-Infinity", "maxValue": "Infinity", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_param", "options": []}, {"summary": "Maximum fraction of samples filtered at the genotype level", "name": "--minFractionFilteredGenotypes", "synonyms": "NA", "type": "double", "required": "no", "fulltext": "If this argument is provided, select sites where a fraction or more of the samples are filtered at the genotype level.", "defaultValue": "0.0", "minValue": "-Infinity", "maxValue": "Infinity", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_param", "options": []}, {"summary": "Minimum size of indels to include", "name": "--minIndelSize", "synonyms": "NA", "type": "int", "required": "no", "fulltext": "If this argument is provided, indels that are smaller than the specified size will be excluded.", "defaultValue": "0", "minValue": "-Infinity", "maxValue": "Infinity", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_param", "options": []}, {"summary": "File to which variants should be written", "name": "--out", "synonyms": "-o", "type": "VariantContextWriter", "required": "no", "fulltext": "", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_out", "options": []}, {"summary": "Preserve original alleles, do not trim", "name": "--preserveAlleles", "synonyms": "-noTrim", "type": "boolean", "required": "no", "fulltext": "The default behavior of this tool is to remove bases common to all remaining alleles after subsetting\n operations have been completed, leaving only their minimal representation. If this flag is enabled, the original\n alleles will be preserved as recorded in the input VCF.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_flag", "options": []}, {"summary": "Select a fraction of genotypes at random from the input and sets them to no-call", "name": "--remove_fraction_genotypes", "synonyms": "-fractionGenotypes", "type": "double", "required": "no", "fulltext": "The value of this argument should be a number between 0 and 1 specifying the fraction of total variants to be\n randomly selected from the input callset and set to no-call (./). Note that this is done using a probabilistic\n function, so the final result is not guaranteed to carry the exact fraction requested. Can be used for large fractions.", "defaultValue": "0.0", "minValue": "-Infinity", "maxValue": "Infinity", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_param", "options": []}, {"summary": "Remove alternate alleles not present in any genotypes", "name": "--removeUnusedAlternates", "synonyms": "-trimAlternates", "type": "boolean", "required": "no", "fulltext": "When this flag is enabled, all alternate alleles that are not present in the (output) samples will be removed.\n Note that this even extends to biallelic SNPs - if the alternate allele is not present in any sample, it will be\n removed and the record will contain a '.' in the ALT column. Note also that sites-only VCFs, by definition, do\n not include the alternate allele in any genotype calls.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_flag", "options": []}, {"summary": "Select only variants of a particular allelicity", "name": "--restrictAllelesTo", "synonyms": "-restrictAllelesTo", "type": "NumberAlleleRestriction", "required": "no", "fulltext": "When this argument is used, we can choose to include only multiallelic or biallelic sites, depending on how many alleles are listed in the ALT column of a VCF.\n For example, a multiallelic record such as:\n     1    100 .   A   AAA,AAAAA\n will be excluded if `-restrictAllelesTo BIALLELIC` is used, because there are two alternate alleles, whereas a record such as:\n     1    100 .   A  T\n will be included in that case, but would be excluded if `-restrictAllelesTo MULTIALLELIC` is used.\n Valid options are ALL (default), MULTIALLELIC or BIALLELIC.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_param", "options": [{"summary": "", "name": "ALL"}, {"summary": "", "name": "BIALLELIC"}, {"summary": "", "name": "MULTIALLELIC"}]}, {"summary": "Regular expression to select multiple samples", "name": "--sample_expressions", "synonyms": "-se", "type": "Set[String]", "required": "no", "fulltext": "Using a regular expression allows you to match multiple sample names that have that pattern in common. This\n argument can be specified multiple times in order to use multiple different matching patterns.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_param", "options": []}, {"summary": "File containing a list of samples to include", "name": "--sample_file", "synonyms": "-sf", "type": "Set[File]", "required": "no", "fulltext": "Sample names should be in a plain text file listing one sample name per line. This argument can be specified multiple times in order to provide\n multiple sample list files.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_in", "options": []}, {"summary": "Include genotypes from this sample", "name": "--sample_name", "synonyms": "-sn", "type": "Set[String]", "required": "no", "fulltext": "This argument can be specified multiple times in order to provide multiple sample names.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_param", "options": []}, {"summary": "Select a fraction of variants at random from the input", "name": "--select_random_fraction", "synonyms": "-fraction", "type": "double", "required": "no", "fulltext": "The value of this argument should be a number between 0 and 1 specifying the fraction of total variants to be\n randomly selected from the input callset. Note that this is done using a probabilistic function, so the final\n result is not guaranteed to carry the exact fraction requested. Can be used for large fractions.", "defaultValue": "0.0", "minValue": "-Infinity", "maxValue": "Infinity", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_param", "options": []}, {"summary": "One or more criteria to use when selecting the data", "name": "--selectexpressions", "synonyms": "-select", "type": "ArrayList[String]", "required": "no", "fulltext": "See example commands above for detailed usage examples. Note that these expressions are evaluated *after* the\n specified samples are extracted and the INFO field annotations are updated.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_param", "options": []}, {"summary": "Do not select certain type of variants from the input file", "name": "--selectTypeToExclude", "synonyms": "-xlSelectType", "type": "List[Type]", "required": "no", "fulltext": "This argument excludes particular kinds of variants out of a list. If left empty, there is no type selection\n and all variant types are considered for other selection criteria. Valid types are INDEL, SNP, MIXED, MNP,\n SYMBOLIC, NO_VARIATION. Can be specified multiple times.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_param", "options": []}, {"summary": "Select only a certain type of variants from the input file", "name": "--selectTypeToInclude", "synonyms": "-selectType", "type": "List[Type]", "required": "no", "fulltext": "This argument selects particular kinds of variants out of a list. If left empty, there is no type selection\n and all variant types are considered for other selection criteria. Valid types are INDEL, SNP, MIXED, MNP,\n SYMBOLIC, NO_VARIATION. Can be specified multiple times.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_param", "options": []}, {"summary": "Set filtered genotypes to no-call", "name": "--setFilteredGtToNocall", "synonyms": "NA", "type": "boolean", "required": "no", "fulltext": "If this argument is provided, set filtered genotypes to no-call (./.).", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_flag", "options": []}, {"summary": "Input VCF file", "name": "--variant", "synonyms": "-V", "type": "RodBinding[VariantContext]", "required": "yes", "fulltext": "Variants from this VCF file are used by this tool as input.\n The file must at least contain the standard VCF header lines, but\n can be empty (i.e., no variants are contained in the file).", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "<a href=htsjdk_variant_bcf2_BCF2Codec.php>BCF2</a>, <a href=htsjdk_variant_vcf_VCFCodec.php>VCF</a>, <a href=htsjdk_variant_vcf_VCF3Codec.php>VCF3</a>", "kind": "required_in", "options": []}], "refwindow": {}, "description": "\n\n <p>\n Often, a VCF containing many samples and/or variants will need to be subset in order to facilitate certain analyses\n (e.g. comparing and contrasting cases vs. controls; extracting variant or non-variant loci that meet certain\n requirements, displaying just a few samples in a browser like IGV, etc.). SelectVariants can be used for this purpose.\n </p>\n <p>\n There are many different options for selecting subsets of variants from a larger callset:\n <ul>\n     <li>Extract one or more samples from a callset based on either a complete sample name or a pattern match.</li>  \n     <li>Specify criteria for inclusion that place thresholds on annotation values, e.g. \"DP > 1000\" (depth of\n coverage greater than 1000x), \"AF < 0.25\" (sites with allele frequency less than 0.25). These criteria are written \n as \"JEXL expressions\", which are documented in the \n <a href=\"http://www.broadinstitute.org/gatk/guide/article?id=1255\">article about using JEXL expressions</a>.</li>\n     <li>Provide concordance or discordance tracks in order to include or exclude variants that are \n also present in other given callsets.</li>\n     <li>Select variants based on criteria like their type \n (e.g. INDELs only), evidence of mendelian violation, filtering status, allelicity, and so on.</li>\n </ul>\n </p>\n \n <p>There are also several options for recording the original values of certain annotations that are recalculated \n when a subsetting the new callset, trimming alleles, and so on.</p>\n \n <h3>Input</h3>\n <p>\n A variant call set from which to select a subset.\n </p>\n\n <h3>Output</h3>\n <p>\n A new VCF file containing the selected subset of variants.\n </p>\n\n <h3>Usage examples</h3>\n <h4>Select two samples out of a VCF with many samples</h4>\n <pre>\n java -jar GenomeAnalysisTK.jar \\\n   -T SelectVariants \\\n   -R reference.fasta \\\n   -V input.vcf \\\n   -o output.vcf \\\n   -sn SAMPLE_A_PARC \\\n   -sn SAMPLE_B_ACTG\n </pre>\n\n <h4>Select two samples and any sample that matches a regular expression</h4>\n <pre>\n java -jar GenomeAnalysisTK.jar \\\n   -T SelectVariants \\\n   -R reference.fasta \\\n   -V input.vcf \\\n   -o output.vcf \\\n   -sn SAMPLE_1_PARC \\\n   -sn SAMPLE_1_ACTG \\\n   -se 'SAMPLE.+PARC'\n </pre>\n\n <h4>Exclude two samples and any sample that matches a regular expression:</h4>\n <pre>\n java -jar GenomeAnalysisTK.jar \\\n   -R ref.fasta \\\n   -T SelectVariants \\\n   --variant input.vcf \\\n   -o output.vcf \\\n   -xl_sn SAMPLE_1_PARC \\\n   -xl_sn SAMPLE_1_ACTG \\\n   -xl_se 'SAMPLE.+PARC'\n </pre>\n\n <h4>Select any sample that matches a regular expression and sites where the QD annotation is more than 10:</h4>\n <pre>\n java -Xmx2g -jar GenomeAnalysisTK.jar \\\n   -R ref.fasta \\\n   -T SelectVariants \\\n   -R reference.fasta \\\n   -V input.vcf \\\n   -o output.vcf \\\n   -se 'SAMPLE.+PARC' \\\n   -select \"QD > 10.0\"\n </pre>\n\n <h4>Select any sample that does not match a regular expression and sites where the QD annotation is more than 10:</h4>\n <pre>\n java  -jar GenomeAnalysisTK.jar \\\n   -R ref.fasta \\\n   -T SelectVariants \\\n   --variant input.vcf \\\n   -o output.vcf \\\n   -se 'SAMPLE.+PARC' \\\n   -select \"QD > 10.0\"\n   -invertSelect\n </pre>\n\n <h4>Select a sample and exclude non-variant loci and filtered loci (trim remaining alleles by default):</h4>\n <pre>\n java -jar GenomeAnalysisTK.jar \\\n   -R ref.fasta \\\n   -T SelectVariants \\\n   -R reference.fasta \\\n   -V input.vcf \\\n   -o output.vcf \\\n   -sn SAMPLE_1_ACTG \\\n   -env \\\n   -ef\n </pre>\n\n <h4>Select a sample, subset remaining alleles, but don't trim:</h4>\n <pre>\n java -jar GenomeAnalysisTK.jar \\\n   -T SelectVariants \\\n   -R reference.fasta \\\n   -V input.vcf \\\n   -o output.vcf \\\n   -sn SAMPLE_1_ACTG \\\n   -env \\\n   -noTrim\n</pre>\n\n <h4>Select a sample and restrict the output vcf to a set of intervals:</h4>\n <pre>\n java -jar GenomeAnalysisTK.jar \\\n   -T SelectVariants \\\n   -R reference.fasta \\\n   -V input.vcf \\\n   -o output.vcf \\\n   -L /path/to/my.interval_list \\\n   -sn SAMPLE_1_ACTG\n </pre>\n\n <h4>Select all calls missed in my vcf, but present in HapMap (useful to take a look at why these variants weren't called in my dataset):</h4>\n <pre>\n java -jar GenomeAnalysisTK.jar \\\n   -T SelectVariants \\\n   -R reference.fasta \\\n   -V hapmap.vcf \\\n   --discordance myCalls.vcf \\\n   -o output.vcf \\\n   -sn mySample\n </pre>\n\n <h4>Select all calls made by both myCalls and theirCalls (useful to take a look at what is consistent between two callers):</h4>\n <pre>\n java -jar GenomeAnalysisTK.jar \\\n   -T SelectVariants \\\n   -R reference.fasta \\\n   -V myCalls.vcf \\\n   --concordance theirCalls.vcf \\\n   -o output.vcf \\\n   -sn mySample\n </pre>\n\n <h4>Generating a VCF of all the variants that are mendelian violations. The optional argument '-mvq' restricts the selection to sites that have a QUAL score of 50 or more</h4>\n <pre>\n java -jar GenomeAnalysisTK.jar \\\n   -T SelectVariants \\\n   -R reference.fasta \\\n   -V input.vcf \\\n   -ped family.ped \\\n   -mv -mvq 50 \\\n   -o violations.vcf\n </pre>\n\n <h4>Generating a VCF of all the variants that are not mendelian violations. The optional argument '-mvq' together with '-invMv' restricts the selection to sites that have a QUAL score of 50 or less</h4>\n <pre>\n java -jar GenomeAnalysisTK.jar \\\n   -T SelectVariants \\\n   -R reference.fasta \\\n   -V input.vcf \\\n   -ped family.ped \\\n   -mv -mvq 50 -invMv \\\n   -o violations.vcf\n </pre>\n\n <h4>Create a set with 50% of the total number of variants in the variant VCF:</h4>\n <pre>\n java -jar GenomeAnalysisTK.jar \\\n   -T SelectVariants \\\n   -R reference.fasta \\\n   -V input.vcf \\\n   -o output.vcf \\\n   -fraction 0.5\n </pre>\n\n <h4>Select only indels between 2 and 5 bases long from a VCF:</h4>\n <pre>\n java -jar GenomeAnalysisTK.jar \\\n   -R ref.fasta \\\n   -T SelectVariants \\\n   -R reference.fasta \\\n   -V input.vcf \\\n   -o output.vcf \\\n   -selectType INDEL\n   --minIndelSize 2\n   --maxIndelSize 5\n </pre>\n\n <h4>Exclude indels from a VCF:</h4>\n <pre>\n java -Xmx2g -jar GenomeAnalysisTK.jar \\\n   -R ref.fasta \\\n   -T SelectVariants \\\n   --variant input.vcf \\\n   -o output.vcf \\\n   --selectTypeToExclude INDEL\n </pre>\n\n <h4>Select only multi-allelic SNPs and MNPs from a VCF (i.e. SNPs with more than one allele listed in the ALT column):</h4>\n <pre>\n java -jar GenomeAnalysisTK.jar \\\n   -T SelectVariants \\\n   -R reference.fasta \\\n   -V input.vcf \\\n   -o output.vcf \\\n   -selectType SNP -selectType MNP \\\n   -restrictAllelesTo MULTIALLELIC\n </pre>\n\n <h4>Select IDs in fileKeep and exclude IDs in fileExclude:</h4>\n <pre>\n java -jar GenomeAnalysisTK.jar \\\n   -R ref.fasta \\\n   -T SelectVariants \\\n   --variant input.vcf \\\n   -o output.vcf \\\n   -IDs fileKeep \\\n   -excludeIDs fileExclude\n </pre>\n\n <h4>Select sites where there are between 2 and 5 samples and between 10 and 50 percent of the sample genotypes are filtered:</h4>\n <pre>\n java -jar GenomeAnalysisTK.jar \\\n   -R ref.fasta \\\n   -T SelectVariants \\\n   --variant input.vcf \\\n   --maxFilteredGenotypes 5\n   --minFilteredGenotypes 2\n   --maxFractionFilteredGenotypes 0.60\n   --minFractionFilteredGenotypes 0.10\n </pre>\n\n  <h4>Set filtered genotypes to no-call (./.):</h4>\n <pre>\n java -jar GenomeAnalysisTK.jar \\\n   -R ref.fasta \\\n   -T SelectVariants \\\n   --variant input.vcf \\\n   --setFilteredGtToNocall\n </pre>", "name": "SelectVariants", "annotinfo": "", "readfilters": [{"filename": "org_broadinstitute_gatk_engine_filters_MalformedReadFilter.php", "name": "MalformedReadFilter"}, {"filename": "org_broadinstitute_gatk_engine_filters_BadCigarFilter.php", "name": "BadCigarFilter"}, {"filename": "org_broadinstitute_gatk_engine_filters_UnmappedReadFilter.php", "name": "UnmappedReadFilter"}, {"filename": "org_broadinstitute_gatk_engine_filters_NotPrimaryAlignmentFilter.php", "name": "NotPrimaryAlignmentFilter"}, {"filename": "org_broadinstitute_gatk_engine_filters_FailsVendorQualityCheckFilter.php", "name": "FailsVendorQualityCheckFilter"}, {"filename": "org_broadinstitute_gatk_engine_filters_DuplicateReadFilter.php", "name": "DuplicateReadFilter"}], "downsampling": {}, "group": "Variant Evaluation and Manipulation Tools", "annotfield": ""}