{"summary": "Extract specific fields from a VCF file to a tab-delimited table", "parallel": [], "activeregion": {}, "partitiontype": "LOCUS", "walkertype": "LocusWalker", "arguments": [{"summary": "If provided, we will not require every record to contain every field", "name": "--allowMissingData", "synonyms": "-AMD", "type": "boolean", "required": "no", "fulltext": "By default, this tool throws a UserException when it encounters a field without a value in some record.  This\n is generally useful when you mistype -F CHROM, so that you get a friendly warning about CHROM not being\n found before the tool runs through 40M 1000G records.  However, in some cases you genuinely want to allow such\n fields (e.g., AC not being calculated for filtered records, if included).  When provided, this argument\n will cause VariantsToTable to write out NA values for missing fields instead of throwing an error.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "advanced_flag", "options": []}, {"summary": "The name of each field to capture for output in the table", "name": "--fields", "synonyms": "-F", "type": "List[String]", "required": "no", "fulltext": "-F NAME can be any standard VCF column (CHROM, ID, QUAL) or any binding in the INFO field (e.g., AC=10).\n Note that to capture GENOTYPE (FORMAT) field values, see the GF argument.  This argument accepts any number\n of inputs.  So -F CHROM -F POS is allowed.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_param", "options": []}, {"summary": "The name of each genotype field to capture for output in the table", "name": "--genotypeFields", "synonyms": "-GF", "type": "List[String]", "required": "no", "fulltext": "-GF NAME can be any binding in the FORMAT field (e.g., GQ, PL).\n Note this argument accepts any number of inputs.  So -GF GQ -GF PL is allowed.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_param", "options": []}, {"summary": "If provided, we will emit at most maxRecord records to the table", "name": "--maxRecords", "synonyms": "-M", "type": "int", "required": "no", "fulltext": "If provided, then this tool will exit with success after this number of VCF records have been emitted to the file.", "defaultValue": "-1", "minValue": "-Infinity", "maxValue": "Infinity", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_param", "options": []}, {"summary": "If provided, we will produce molten output", "name": "--moltenize", "synonyms": "-moltenize", "type": "boolean", "required": "no", "fulltext": "By default, this tool emits one line per usable VCF record (or per allele if the -SMA flag is provided).  Using the -moltenize flag\n will cause records to be split into multiple lines of output: one for each field provided with -F or one for each combination of sample\n and field provided with -GF.  Note that the \"Sample\" column for -F fields will always be \"site\".", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "advanced_flag", "options": []}, {"summary": "File to which results should be written", "name": "--out", "synonyms": "-o", "type": "PrintStream", "required": "no", "fulltext": "", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_out", "options": []}, {"summary": "If provided, field values from filtered records will be included in the output", "name": "--showFiltered", "synonyms": "-raw", "type": "boolean", "required": "no", "fulltext": "By default this tool only emits values for fields where the FILTER field is either PASS or . (unfiltered).\n Throwing this flag will cause VariantsToTable to emit values regardless of the FILTER field value.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "advanced_flag", "options": []}, {"summary": "If provided, we will split multi-allelic records into multiple lines of output", "name": "--splitMultiAllelic", "synonyms": "-SMA", "type": "boolean", "required": "no", "fulltext": "By default, records with multiple ALT alleles will comprise just one line of output; note that in general this can make your resulting file\n unreadable/malformed for certain tools like R, as the representation of multi-allelic INFO field values are often comma-separated lists\n of values.  Using the flag will cause multi-allelic records to be split into multiple lines of output (one for each allele in the ALT field);\n INFO field values that are not lists are copied for each of the output records while only the appropriate entry is used for lists.", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "NA", "kind": "optional_flag", "options": []}, {"summary": "Input VCF file", "name": "--variant", "synonyms": "-V", "type": "List[RodBinding[VariantContext]]", "required": "yes", "fulltext": "Variants from this VCF file are used by this tool as input.\n The file must at least contain the standard VCF header lines, but\n can be empty (i.e., no variants are contained in the file).", "defaultValue": "NA", "minValue": "NA", "maxValue": "NA", "minRecValue": "NA", "maxRecValue": "NA", "rodTypes": "<a href=htsjdk_variant_bcf2_BCF2Codec.php>BCF2</a>, <a href=htsjdk_variant_vcf_VCFCodec.php>VCF</a>, <a href=htsjdk_variant_vcf_VCF3Codec.php>VCF3</a>", "kind": "required_in", "options": []}], "refwindow": {}, "description": "\n\n <p>\n This tool is designed to extract fields from the VCF to a table format that is more convenient to work with in\n downstream analyses.</p>\n\n <p>The user specifies one or more\n fields to print with the -F NAME, each of which appears as a single column in\n the output file, with a header named NAME, and the value of this field in the VCF\n one per line.  NAME can be any standard VCF column (CHROM, ID, QUAL) or any binding\n in the INFO field (AC=10).  In addition, there are specially supported values like\n EVENTLENGTH (length of the event), TRANSITION (for SNPs), HET (count of het genotypes),\n HOM-REF (count of homozygous reference genotypes), HOM-VAR (count of homozygous variant\n genotypes), NO-CALL (count of no-call genotypes), TYPE (the type of event), VAR (count of\n non-reference genotypes), NSAMPLES (number of samples), NCALLED (number of called samples),\n GQ (from the genotype field; works only for a file with a single sample), and MULTI-ALLELIC\n (is the record from a multi-allelic site).  </p>\n\n </p>\n\n <h3>Input</h3>\n <p>\n <ul>\n     <li>A VCF file</li>\n     <li>A list of -F fields to write</li>\n </ul>\n </p>\n\n <h3>Output</h3>\n <p>\n A tab-delimited file containing the values of the requested fields in the VCF file\n </p>\n\n <h3>Usage example</h3>\n <pre>\n     java -jar GenomeAnalysisTK.jar \\\n     -R reference.fasta\n     -T VariantsToTable \\\n     -V file.vcf \\\n     -F CHROM -F POS -F ID -F QUAL -F AC \\\n     -o results.table\n </pre>\n <p>would produce a file that looks like:</p>\n <pre>\n     CHROM    POS ID      QUAL    AC\n     1        10  .       50      1\n     1        20  rs10    99      10\n     et cetera...\n </pre>\n\n <h3>Caveat</h3>\n <p>If a VCF record is missing a value, then the tool by default throws an error, but the special value NA can\n be emitted instead if requested at the command line using --allowMissingData.</p>", "name": "VariantsToTable", "annotinfo": "", "readfilters": [{"filename": "org_broadinstitute_gatk_engine_filters_MalformedReadFilter.php", "name": "MalformedReadFilter"}, {"filename": "org_broadinstitute_gatk_engine_filters_BadCigarFilter.php", "name": "BadCigarFilter"}, {"filename": "org_broadinstitute_gatk_engine_filters_UnmappedReadFilter.php", "name": "UnmappedReadFilter"}, {"filename": "org_broadinstitute_gatk_engine_filters_NotPrimaryAlignmentFilter.php", "name": "NotPrimaryAlignmentFilter"}, {"filename": "org_broadinstitute_gatk_engine_filters_FailsVendorQualityCheckFilter.php", "name": "FailsVendorQualityCheckFilter"}, {"filename": "org_broadinstitute_gatk_engine_filters_DuplicateReadFilter.php", "name": "DuplicateReadFilter"}], "downsampling": {}, "group": "Variant Evaluation and Manipulation Tools", "annotfield": ""}